{"version":3,"sources":["SortingAlgorithms/MergeSort.js","SortingAlgorithms/InsertionSort.js","SortingAlgorithms/BubbleSort.js","SortingVisualizer/SortingVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["mergeSortHelper","mainArray","startInd","endInd","auxArray","animations","middleInd","Math","floor","doMerge","k","i","j","push","getMergeSortAnimations","array","length","slice","getInsertionSortAnimations","key","getBubbleSortAnimations","swap","arr","a","b","temp","useStyles","makeStyles","arraySizeSlider","height","window","innerHeight","position","left","bottom","animationSpeedSlider","right","Buttons","SortingVisualizer","MAX_ARRAY_SIZE","innerWidth","useState","setArray","animationSpeed","setAnimationSpeed","arraySize","setArraySize","barWidth","setBarWidth","allDisabled","setAllDisabled","onlyGenerateEnabled","setOnlyGenerateEnabled","useEffect","resetArray","numbers","randomIntFromInterval","setTimeout","reset2","min","max","random","mergeSort","arrayBars","document","getElementsByClassName","barOneInd","newHeight","style","InsertionSort","barTwoInd","barOneStyle","barTwoStyle","BubbleSort","classes","className","Typography","id","gutterBottom","Slider","step","disabled","orientation","onChange","event","newValue","defaultValue","aria-labelledby","valueLabelDisplay","ButtonGroup","classname","disableRipple","variant","color","Button","onClick","margin-left","margin-right","map","number","ind","width","class","disableElevation","startIcon","Icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f915228b.chunk.js","sourcesContent":["const getMergeSortAnimations = (array) => {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxArray, animations);\r\n  return animations;\r\n};\r\n\r\nconst mergeSortHelper = (mainArray, startInd, endInd, auxArray, animations) => {\r\n  if (startInd === endInd) return;\r\n  const middleInd = Math.floor((startInd + endInd) / 2);\r\n  mergeSortHelper(auxArray, startInd, middleInd, mainArray, animations);\r\n  mergeSortHelper(auxArray, middleInd + 1, endInd, mainArray, animations);\r\n  doMerge(mainArray, startInd, middleInd, endInd, auxArray, animations);\r\n};\r\n\r\nconst doMerge = (\r\n  mainArray,\r\n  startInd,\r\n  middleInd,\r\n  endInd,\r\n  auxArray,\r\n  animations\r\n) => {\r\n  let k = startInd;\r\n  let i = startInd;\r\n  let j = middleInd + 1;\r\n  while (i <= middleInd && j <= endInd) {\r\n    if (auxArray[i] <= auxArray[j]) {\r\n      animations.push([k, auxArray[i]]);\r\n      mainArray[k++] = auxArray[i++];\r\n    } else {\r\n      animations.push([k, auxArray[j]]);\r\n      mainArray[k++] = auxArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleInd) {\r\n    animations.push([k, auxArray[i]]);\r\n    mainArray[k++] = auxArray[i++];\r\n  }\r\n  while (j <= endInd) {\r\n    animations.push([k, auxArray[j]]);\r\n    mainArray[k++] = auxArray[j++];\r\n  }\r\n};\r\n\r\nexport default getMergeSortAnimations;\r\n","const getInsertionSortAnimations = (array) => {\r\n  const animations = [];\r\n  for (let i = 1; i < array.length; i++) {\r\n    let key = array[i];\r\n    let j = i - 1;\r\n\r\n    while (j >= 0 && array[j] > key) {\r\n      animations.push([j + 1, j]);\r\n      array[j + 1] = array[j];\r\n      j = j - 1;\r\n    }\r\n    array[j + 1] = key;\r\n  }\r\n  return animations;\r\n};\r\n\r\nexport default getInsertionSortAnimations;\r\n","const getBubbleSortAnimations = (array) => {\r\n  const animations = [];\r\n  const swap = (arr, a, b) => {\r\n    let temp = arr[a];\r\n    arr[a] = arr[b];\r\n    arr[b] = temp;\r\n  };\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      let a = array[j];\r\n      let b = array[j + 1];\r\n      if (a > b) {\r\n        animations.push([j, j + 1]);\r\n        swap(array, j, j + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport default getBubbleSortAnimations;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport getMergeSortAnimations from \"../SortingAlgorithms/MergeSort\";\r\nimport getInsertionSortAnimations from \"../SortingAlgorithms/InsertionSort\";\r\nimport getBubbleSortAnimations from \"../SortingAlgorithms/BubbleSort\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Typography,\r\n  Slider,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./SortingVisualizer.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  arraySizeSlider: {\r\n    height: window.innerHeight / 2,\r\n    position: \"absolute\",\r\n    left: 25,\r\n    bottom: 150,\r\n  },\r\n  animationSpeedSlider: {\r\n    height: window.innerHeight / 2,\r\n    position: \"absolute\",\r\n    right: 25,\r\n    bottom: 150,\r\n  },\r\n  Buttons: {\r\n    position: \"relative\",\r\n    bottom: -25,\r\n  },\r\n});\r\n\r\nconst SortingVisualizer = () => {\r\n  const MAX_ARRAY_SIZE = (window.innerWidth - 200) / 4;\r\n  const [array, setArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(2);\r\n  const [arraySize, setArraySize] = useState(MAX_ARRAY_SIZE / 2 + 25);\r\n  const [barWidth, setBarWidth] = useState(\r\n    (window.innerWidth - 200 - arraySize * 2) / arraySize\r\n  );\r\n  const [allDisabled, setAllDisabled] = useState(false);\r\n  const [onlyGenerateEnabled, setOnlyGenerateEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    resetArray(arraySize);\r\n  }, []);\r\n\r\n  const resetArray = (arraySize) => {\r\n    const numbers = [];\r\n    for (let i = 0; i < arraySize; i++) {\r\n      numbers.push(randomIntFromInterval(5, window.innerHeight - 200));\r\n    }\r\n    setArray(numbers);\r\n    setTimeout(() => {\r\n      reset2(arraySize);\r\n    }, 10);\r\n    setTimeout(() => {\r\n      setAllDisabled(false);\r\n    }, 10);\r\n  };\r\n\r\n  const reset2 = (arraySize) => {\r\n    const numbers = [];\r\n    for (let i = 0; i < arraySize; i++) {\r\n      numbers.push(randomIntFromInterval(5, window.innerHeight - 250));\r\n    }\r\n    setArray(numbers);\r\n  };\r\n\r\n  const randomIntFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  const mergeSort = async () => {\r\n    setAllDisabled(true);\r\n    await setOnlyGenerateEnabled(true);\r\n    const animations = getMergeSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      setTimeout(() => {\r\n        const [barOneInd, newHeight] = animations[i];\r\n        const barOneStyle = arrayBars[barOneInd].style;\r\n        barOneStyle.height = `${newHeight}px`;\r\n      }, i * animationSpeed);\r\n    }\r\n    setTimeout(() => {\r\n      setOnlyGenerateEnabled(false);\r\n    }, animations.length * animationSpeed);\r\n  };\r\n\r\n  const InsertionSort = async () => {\r\n    setAllDisabled(true);\r\n    await setOnlyGenerateEnabled(true);\r\n\r\n    const animations = getInsertionSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneInd, barTwoInd] = animations[i];\r\n      const barOneStyle = arrayBars[barOneInd].style;\r\n      const barTwoStyle = arrayBars[barTwoInd].style;\r\n      setTimeout(() => {\r\n        const temp = barOneStyle.height;\r\n        barOneStyle.height = barTwoStyle.height;\r\n        barTwoStyle.height = temp;\r\n      }, i * animationSpeed);\r\n    }\r\n    setTimeout(() => {\r\n      setOnlyGenerateEnabled(false);\r\n    }, animations.length * animationSpeed);\r\n  };\r\n\r\n  const BubbleSort = async () => {\r\n    setAllDisabled(true);\r\n    await setOnlyGenerateEnabled(true);\r\n\r\n    const animations = getBubbleSortAnimations(array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneInd, barTwoInd] = animations[i];\r\n      const barOneStyle = arrayBars[barOneInd].style;\r\n      const barTwoStyle = arrayBars[barTwoInd].style;\r\n      setTimeout(() => {\r\n        const temp = barOneStyle.height;\r\n        barOneStyle.height = barTwoStyle.height;\r\n        barTwoStyle.height = temp;\r\n      }, i * animationSpeed);\r\n    }\r\n    setTimeout(() => {\r\n      setOnlyGenerateEnabled(false);\r\n    }, animations.length * animationSpeed);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleChangeArraySize = (event, newValue) => {\r\n    setBarWidth((window.innerWidth - 200 - newValue * 2) / newValue);\r\n    setArraySize(newValue);\r\n    resetArray(newValue);\r\n  };\r\n\r\n  const handleChangeAnimationSpeed = (event, newValue) => {\r\n    setAnimationSpeed(5 - newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.arraySizeSlider}>\r\n        <Typography id=\"array-size-slider\" gutterBottom>\r\n          Size\r\n        </Typography>\r\n        <Slider\r\n          step={10}\r\n          min={10}\r\n          max={Math.floor(MAX_ARRAY_SIZE / 10) * 10}\r\n          disabled={allDisabled}\r\n          orientation=\"vertical\"\r\n          onChange={handleChangeArraySize}\r\n          defaultValue={arraySize}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n        />\r\n      </div>\r\n      <div className={classes.animationSpeedSlider}>\r\n        <Typography id=\"array-size-slider\" gutterBottom>\r\n          Speed\r\n        </Typography>\r\n        <Slider\r\n          step={0.25}\r\n          min={0}\r\n          max={4.5}\r\n          disabled={allDisabled}\r\n          orientation=\"vertical\"\r\n          onChange={handleChangeAnimationSpeed}\r\n          defaultValue={5 - animationSpeed}\r\n          aria-labelledby=\"discrete-slider\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <ButtonGroup\r\n            classname={classes.ButtonGroup}\r\n            disableRipple={true}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={allDisabled}\r\n          >\r\n            <Button onClick={() => InsertionSort()}>Insertion Sort</Button>\r\n            <Button onClick={() => BubbleSort()}>Bubble Sort</Button>\r\n            <Button onClick={() => mergeSort()}>Merge Sort</Button>\r\n          </ButtonGroup>\r\n        </div>\r\n        <div\r\n          className=\"array-container\"\r\n          position=\"absolute\"\r\n          margin-left=\"auto\"\r\n          margin-right=\"auto\"\r\n        >\r\n          {array.map((number, ind) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={ind}\r\n              style={{ height: `${number}px`, width: `${barWidth}px` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div class=\"wrap\">\r\n        <Button\r\n          className={classes.Buttons}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          startIcon={<Icon>autorenew</Icon>}\r\n          disabled={onlyGenerateEnabled}\r\n          onClick={() => resetArray(arraySize)}\r\n        >\r\n          Generate New Array\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SortingVisualizer;\r\n","import \"./App.css\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}